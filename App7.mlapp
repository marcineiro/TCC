classdef App7 < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                matlab.ui.Figure
        Button                  matlab.ui.control.Button
        LabelNumericEditField   matlab.ui.control.Label
        NumericEditField        matlab.ui.control.NumericEditField
        LabelNumericEditField2  matlab.ui.control.Label
        NumericEditField2       matlab.ui.control.NumericEditField
        Label                   matlab.ui.control.Label
        NumericEditField3       matlab.ui.control.NumericEditField
        Label2                  matlab.ui.control.Label
        NumericEditField4       matlab.ui.control.NumericEditField
        Label3                  matlab.ui.control.Label
        NumericEditField5       matlab.ui.control.NumericEditField
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            
        end

        % Button pushed function: Button
        function Treinar(app, event)
            matrizfinal = zeros (100,12);
            
            for linha=1:100
                
                %Função de Ativacação = tanh
                m=26; %Camada de Entrada
                n=50; %Neurônios na Camada Intermediária
                k=8;  %Saídas (OBV8)
                alfa=0.01;
                
                cont1=0;
                cont2=0;
                cont3=0;
                cont4=0;
                cont5=0;
                cont6=0;
                
                clc;
                A = load('DadosTCC.txt'); % A=[114,27] - MATRIZ DE ENTRADA
                
                global pesos_intermediaria;
                global bias_intermediaria;
                global pesos_saida;
                global bias_saida;
                pesos_intermediaria = rand(m,n);
                pesos_intermediaria = pesos_intermediaria - 0.5;
                bias_intermediaria = rand(1,n);
                bias_intermediaria = bias_intermediaria - 0.5;
                pesos_saida = rand(n,k);
                pesos_saida = pesos_saida - 0.5;
                bias_saida = rand (1,k);
                bias_saida = bias_saida - 0.5;
                sk = zeros (k,1);
                sj = zeros (1,n);
                sin = zeros (1,n);
                var_pesos_intermediaria = zeros (n,m);
                var_bias_intermediaria = zeros (1,n);
                var_pesos_saida = zeros (k,n);
                var_bias_saida = zeros (k,1);
                
                target = [                1 1 1 1 1 1 1 1
                    1 -1 -1 1 -1 1 1 -1];   %9
                errototal=200;
                errototal1=0;
                errototal2=200;
                x=1;
                z=1;
                t=1;
                p=1;
                finalizar=0;
                
                
                while finalizar == 0
                    
                    
%                     disp('Pesos Intermed')
                    pesos_intermediaria_certo=pesos_intermediaria;
                    bias_intermediaria_certo=bias_intermediaria;
                    pesos_saida_certo=pesos_saida;
                    bias_saida_certo=bias_saida;
                    
                    
                    app.NumericEditField.Value = linha;
                    t=t+1;
                    errototal=0;
                    
                    for j=1:70 %CONJUNTO DE TREINAMENTO POSSUI 70 LINHAS
                        
                        entrada(1,1:26) = A(j,1:26);
                        
                        saida(1,1:8) = target(x,1:8);
                        
                        zinj = entrada * pesos_intermediaria + bias_intermediaria;
                        zj = tanh (zinj);
                        yink = zj * pesos_saida + bias_saida;
                        yk = tanh (yink);
                        
                        
                        for kl=1:8 %ERRO TOTAL
                            errototal = errototal + 1/2 * ((saida (1,kl) - yk(1,kl))^2);
                        end
                        
                        sk = (saida-yk) .* (1+yk) .* (1-yk);
                        var_pesos_saida = alfa * sk' * zj;
                        var_bias_saida = alfa * sk;
                        sinj=sk * pesos_saida';
                        sj=sinj.*(1+zj).*(1-zj);
                        var_pesos_intermediaria = alfa * sj' * entrada;
                        var_bias_intermediaria = alfa*sj;
                        pesos_intermediaria = pesos_intermediaria + var_pesos_intermediaria';
                        bias_intermediaria = bias_intermediaria + var_bias_intermediaria;
                        pesos_saida = pesos_saida + var_pesos_saida';
                        bias_saida = bias_saida + var_bias_saida;
                        
                        for kl=1:8
                            final(z,kl) = yk (1,kl);
                        end                      
                        
                        x=x+1;
                        if x==3  %POSSUO DUAS POSSÍVEIS SAÍDAS
                            x=1;
                        end
                        
                        
                    end    
                    
                    app.NumericEditField2.Value=errototal;
                    
                    errototal1=0;
                    
                    for j=71:92
                        for kl=1:26
                            entrada(1,kl) = A(j,kl);
                        end                    
                        
                        for kl=1:8
                            saida(1,kl) = target(x,kl);
                        end
                        
                        zinj = entrada * pesos_intermediaria + bias_intermediaria;
                        zj = tanh (zinj);
                        yink = zj * pesos_saida + bias_saida;
                        yk = tanh (yink);
                        
                        
                        for kl=1:8 %Erro total
                            errototal1 = errototal1 + 1/2 * ((saida (1,kl) - yk(1,kl))^2);
                        end                   
                        
                        x=x+1;
                        if x==3
                            x=1;
                        end                 
                        
                        
                    end
                    
                    if errototal1>errototal2
                        finalizar=1;
                    end             
                    
                    app.NumericEditField4.Value=errototal2;
                    errototal2=errototal1;
                    app.NumericEditField3.Value=errototal1;
                    
                end
                
                
                
                disp ('----')
                
                %xlswrite('biassaida', bias_saida);
                %xlswrite('biasintermediaria', bias_intermediaria);
                %xlswrite('pesossaida', pesos_saida);
                %xlswrite('pesosintermediaria', pesos_intermediaria);
                
                
                
                
                x=1;
                y=1;
                
                
                
                erroteste=0;
                for i=1:114
                    erroteste=0;
                    erroteste2=0;
                    Teste(1,1:26) = A(i,1:26);
                    zinj = Teste * pesos_intermediaria_certo + bias_intermediaria_certo;
                    zj = tanh (zinj);
                    yink = zj * pesos_saida_certo + bias_saida_certo;
                    yk = tanh (yink);
%                     disp('yk')
%                     disp(yk)
                    
                    for kl=1:8
                        saida(1,kl) = target(y,kl);
                    end
                    
                    if i>=1
                        for kl=1:8 %Erro total
                            erroteste = erroteste + 1/2 * ((saida (1,kl) - yk(1,kl))^2);
                        end     
                        
                        if y==1
                            for kl=1:8
                                saida(1,kl) = target(2,kl);
                            end
                            
                            for kl=1:8 %Erro total
                                erroteste2 = erroteste2 + 1/2 * ((saida (1,kl) - yk(1,kl))^2);
                            end
                        end
                        
                        if y==2
                            for kl=1:8
                                saida(1,kl) = target(1,kl);
                            end
                            
                            for kl=1:8 %Erro total
                                erroteste2 = erroteste2 + 1/2 * ((saida (1,kl) - yk(1,kl))^2);
                            end
                        end
                    end
                    
                    
                    if erroteste<1
                        yk=1;
                    elseif erroteste2<1
                        yk=2;
                    else
                        yk=3;
                    end     
                    
                    
                    if i<=70
                        if yk==1
                            cont1=cont1+1;
                        end
                        if yk==3
                            cont4=cont4+1;
                        end    
                    end
                    
                    if i>70 && i<=92
                        if 1==yk
                            cont2=cont2+1;
                        end
                        if yk==3
                            cont5=cont5+1;
                        end
                    end
                    if i>92
                        if 1==yk
                            cont3=cont3+1;
                        end
                        if yk==3
                            cont6=cont6+1;
                        end
                    end
                    x=x+1;
                    if x==2
                        x=0;
                    end
                    
                    y=y+1;
                    if y==3
                        y=1;
                    end
                    
                    
                end
                
                app.NumericEditField5.Value=erroteste;
                
                disp ('Treinamento');
                disp (cont1)
                disp ('Validação');
                disp (cont2)
                disp ('Teste');
                disp (cont3)
                disp ('Nenhum');
                disp (cont4)
                disp (cont5)
                disp (cont6)
                matrizfinal (linha,1) = cont1;
                matrizfinal (linha,2) = 70-cont1-cont4;
                matrizfinal (linha,3) = cont4;
                matrizfinal (linha,4) = cont1/70;
                matrizfinal (linha,5) = cont2;
                matrizfinal (linha,6) = 22-cont2-cont5;
                matrizfinal (linha,7) = cont5;
                matrizfinal (linha,8) = cont2/22;
                matrizfinal (linha,9) = cont3;
                matrizfinal (linha,10) = 22-cont3-cont6;
                matrizfinal (linha,11) = cont6;
                matrizfinal (linha,12) = cont3/22;
                
                
                
            end
            cd 'F:\Study\Engenharia de Computação\Disco virtual\IX Período\PIBIC 2019\2019\Rede\Matrizes'
            xlswrite('matrizfinal2', matrizfinal);
            xlswrite('biasintermediaria', bias_intermediaria);
            xlswrite('pesossaida', pesos_saida);
            xlswrite('pesosintermediaria', pesos_intermediaria);
            
        end

        % Callback function
        function testar(app, event)
            
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [101 101 640 480];
            app.UIFigure.Name = 'UI Figure';

            % Create Button
            app.Button = uibutton(app.UIFigure, 'push');
            app.Button.ButtonPushedFcn = createCallbackFcn(app, @Treinar, true);
            app.Button.Position = [271 164 100 22];
            app.Button.Text = 'Treinar Rede';

            % Create LabelNumericEditField
            app.LabelNumericEditField = uilabel(app.UIFigure);
            app.LabelNumericEditField.HorizontalAlignment = 'right';
            app.LabelNumericEditField.VerticalAlignment = 'top';
            app.LabelNumericEditField.Position = [120 345 52 15];
            app.LabelNumericEditField.Text = 'Edit Field';

            % Create NumericEditField
            app.NumericEditField = uieditfield(app.UIFigure, 'numeric');
            app.NumericEditField.Position = [187 341 100 22];

            % Create LabelNumericEditField2
            app.LabelNumericEditField2 = uilabel(app.UIFigure);
            app.LabelNumericEditField2.HorizontalAlignment = 'right';
            app.LabelNumericEditField2.VerticalAlignment = 'top';
            app.LabelNumericEditField2.Position = [147 305 23 15];
            app.LabelNumericEditField2.Text = 'Erro';

            % Create NumericEditField2
            app.NumericEditField2 = uieditfield(app.UIFigure, 'numeric');
            app.NumericEditField2.Position = [185 301 100 22];

            % Create Label
            app.Label = uilabel(app.UIFigure);
            app.Label.HorizontalAlignment = 'right';
            app.Label.VerticalAlignment = 'top';
            app.Label.Position = [140 268 30 15];
            app.Label.Text = 'Erro2';

            % Create NumericEditField3
            app.NumericEditField3 = uieditfield(app.UIFigure, 'numeric');
            app.NumericEditField3.Position = [185 264 100 22];

            % Create Label2
            app.Label2 = uilabel(app.UIFigure);
            app.Label2.HorizontalAlignment = 'right';
            app.Label2.VerticalAlignment = 'top';
            app.Label2.Position = [143 234 30 15];
            app.Label2.Text = 'Erro3';

            % Create NumericEditField4
            app.NumericEditField4 = uieditfield(app.UIFigure, 'numeric');
            app.NumericEditField4.Position = [188 230 100 22];

            % Create Label3
            app.Label3 = uilabel(app.UIFigure);
            app.Label3.HorizontalAlignment = 'right';
            app.Label3.VerticalAlignment = 'top';
            app.Label3.Position = [140 200 30 15];
            app.Label3.Text = 'Erro4';

            % Create NumericEditField5
            app.NumericEditField5 = uieditfield(app.UIFigure, 'numeric');
            app.NumericEditField5.Position = [185 196 100 22];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = App7

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
